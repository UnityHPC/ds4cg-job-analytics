[project]
name = "unity-job-analytics"
version = "2025.1.0"
requires-python = ">=3.11"
readme = "README.md"
description = "Unity Job Analytics is a tool for analyzing job data in the Unity cluster, providing insights into job performance and efficiency."
dependencies = []

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Ruff configuration options
line-length = 119 # Override ruff's default so that lines aren't more than 120 characters
target-version = "py311"

# Formatting
indent-width = 4

[tool.ruff.lint]
select = [
# pycodestyle
"E",
# Pyflakes
"F",
# pyupgrade
"UP",
# flake8-bugbear
"B",
# flake8-simplify
"SIM",
]
ignore = [
# Ignore use ternary operator in if statements
"SIM108",
]

[tool.ruff.lint.isort]
# Combine multiple 'as' imports on a single line (e.g., import foo as bar, baz as qux)
combine-as-imports = true
# Force sorting of imports within each section (standard, third-party, first-party)
force-sort-within-sections = true
# Treat the 'scripts' and 'src' directory as first-party code for import sorting
known-first-party = ["scripts", "src"]

# Docstring style
[tool.ruff.format]
# format code in docstrings
docstring-code-format = true

# Exclude some directories
exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "venv",
    "build",
    "dist"
]

[tool.pytest.ini_options]
# pytest configuration options
addopts = [
    "--import-mode=importlib", 
]
pythonpath = "."
testpaths = ["tests"]

[tool.mkdocs]
# MkDocs configuration options (you can embed YAML heseupre)
config = """
site_name: DS4CG Unity Job Analytics Docs
theme.name: material
nav:
- Home: index.md
- About: about.md
"""

[tool.coverage.run]
source = ["unity-job-analytics"]
branch = true

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
